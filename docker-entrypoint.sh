#!/bin/bash
set -e

echo "üöÄ Iniciando SAR Biome Monitoring Dashboard..."
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"

# Verificar se o diret√≥rio de dados existe
if [ ! -d "uploaded_data" ]; then
    echo "üìÅ Criando diret√≥rio de dados..."
    mkdir -p uploaded_data
fi

# Iniciar API FastAPI em background
echo "üì° Iniciando API FastAPI na porta 8080..."
uvicorn api_server:app \
    --host 0.0.0.0 \
    --port 8080 \
    --log-level info &

API_PID=$!
echo "‚úÖ API iniciada (PID: $API_PID)"

# Aguardar API iniciar
sleep 3

# Verificar se a API est√° rodando
if ! curl -s http://localhost:8080/api/health > /dev/null; then
    echo "‚ùå Erro: API n√£o iniciou corretamente"
    exit 1
fi

echo "‚úÖ API respondendo corretamente"

# Iniciar Streamlit
echo "üé® Iniciando Dashboard Streamlit na porta 8501..."
streamlit run app.py \
    --server.port=8501 \
    --server.address=0.0.0.0 \
    --server.headless=true \
    --server.enableCORS=false \
    --server.enableXsrfProtection=false \
    --browser.gatherUsageStats=false &

STREAMLIT_PID=$!
echo "‚úÖ Streamlit iniciado (PID: $STREAMLIT_PID)"

echo ""
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo "üéâ Todos os servi√ßos iniciados com sucesso!"
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo "üì° API FastAPI:      http://0.0.0.0:8080"
echo "üé® Dashboard:        http://0.0.0.0:8501"
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo ""

# Fun√ß√£o para cleanup ao sair
cleanup() {
    echo ""
    echo "üõë Parando servi√ßos..."
    kill $API_PID $STREAMLIT_PID 2>/dev/null || true
    echo "‚úÖ Servi√ßos parados"
    exit 0
}

# Capturar sinais de t√©rmino
trap cleanup SIGTERM SIGINT

# Manter o container rodando
wait $API_PID $STREAMLIT_PID
